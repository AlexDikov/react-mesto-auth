{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrlUser = `${baseUrl}/users/me`;\n    this._baseUrlCards = `${baseUrl}/cards`;\n    this._headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    };\n  }\n  _checkRespondStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getProfile() {\n    return fetch(this._baseUrlUser, {\n      headers: this._headers\n    }).then(res => this._checkRespondStatus(res));\n    debugger;\n  }\n  editProfile(data) {\n    return fetch(this._baseUrlUser, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkRespondStatus(res));\n  }\n  editAvatar(data) {\n    return fetch(`${this._baseUrlUser}/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(res => this._checkRespondStatus(res));\n  }\n  getInitialCards() {\n    return fetch(this._baseUrlCards, {\n      headers: this._headers\n    }).then(res => this._checkRespondStatus(res));\n  }\n  addNewCard(data) {\n    return fetch(this._baseUrlCards, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.place,\n        link: data.link\n      })\n    }).then(res => this._checkRespondStatus(res));\n  }\n  removeCard(cardId) {\n    return fetch(`${this._baseUrlCards}/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkRespondStatus(res));\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (!isLiked) {\n      return fetch(`${this._baseUrlCards}/${cardId}/likes/`, {\n        method: \"PUT\",\n        headers: this._headers,\n        body: JSON.stringify(api.getProfile())\n      }).then(res => this._checkRespondStatus(res));\n    } else {\n      return fetch(`${this._baseUrlCards}/${cardId}/likes/`, {\n        method: \"DELETE\",\n        headers: this._headers,\n        body: JSON.stringify(api.getProfile().then(data => data))\n      }).then(res => this._checkRespondStatus(res));\n    }\n  }\n}\nexport const api = new Api({\n  baseUrl: \"http://localhost:3001\",\n  headers: {\n    authorization: \"\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrlUser","_baseUrlCards","_headers","Authorization","localStorage","getItem","_checkRespondStatus","res","ok","json","Promise","reject","status","getProfile","fetch","then","editProfile","data","method","body","JSON","stringify","name","about","editAvatar","avatar","getInitialCards","addNewCard","place","link","removeCard","cardId","changeLikeCardStatus","isLiked","api","authorization"],"sources":["/Users/aleksandrdikov/dev/mesto-auth/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrlUser = `${baseUrl}/users/me`;\n    this._baseUrlCards = `${baseUrl}/cards`;\n    this._headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    };\n  }\n\n  _checkRespondStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getProfile() {\n    return fetch(this._baseUrlUser, {\n      headers: this._headers,\n    }).then((res) => this._checkRespondStatus(res));\n    debugger;\n  }\n\n  editProfile(data) {\n    return fetch(this._baseUrlUser, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => this._checkRespondStatus(res));\n  }\n\n  editAvatar(data) {\n    return fetch(`${this._baseUrlUser}/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then((res) => this._checkRespondStatus(res));\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrlCards, {\n      headers: this._headers,\n    }).then((res) => this._checkRespondStatus(res));\n  }\n\n  addNewCard(data) {\n    return fetch(this._baseUrlCards, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.place,\n        link: data.link,\n      }),\n    }).then((res) => this._checkRespondStatus(res));\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrlCards}/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkRespondStatus(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (!isLiked) {\n      return fetch(`${this._baseUrlCards}/${cardId}/likes/`, {\n        method: \"PUT\",\n        headers: this._headers,\n        body: JSON.stringify(api.getProfile()),\n      }).then((res) => this._checkRespondStatus(res));\n    } else {\n      return fetch(`${this._baseUrlCards}/${cardId}/likes/`, {\n        method: \"DELETE\",\n        headers: this._headers,\n        body: JSON.stringify(api.getProfile().then((data) => data)),\n      }).then((res) => this._checkRespondStatus(res));\n    }\n  }\n}\n\nexport const api = new Api({\n  baseUrl: \"http://localhost:3001\",\n  headers: {\n    authorization:\"\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}